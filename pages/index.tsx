// TODOS: dark mode mail closer icon [done]
// copy to clipboard alert [done]
// data fix [done]
// add text under the socials [done]
// maybe add a intro signiture
// add see more see less buttons to descriptions [done]

import Head from 'next/head'
import Intro from '@/components/Intro'
import { useEffect, useState } from 'react'

import NavBar from '../components/NavBar'
import MainPage from '../components/MainPage'

import projectsData from './api/data.json'

export type ProjectData = {
  id: number
  name: string
  image: string[]
  description: string
  link: string
  codeLink: string
  technologies: string[]
  status: {
    views: string
    increaseViews: string
    likes: string
    increaseLikes: string
    decreaseLikes: string
  }
}[]

export default function Home(props: { pageViwers: number }) {
  const [darkMode, setDarkMode] = useState<boolean | null>()
  const [data, setData] = useState(projectsData)
  const [visitors, setVisitors] = useState<number>(props.pageViwers)
  const [likesData, setLikesData] = useState<any>({})
  const [sumOfLikes, setSumOfLikes] = useState<any>()
  const [calculating, setCalculating] = useState<boolean>(true)
  const [userDataStarter, setUserDataStarter] = useState<any>({})
  const [r, setR] = useState<boolean>(false)
  const [showIntro, setShowIntro] = useState<boolean>(true)

  // in this useEffect we are fetching the url to get the page views from this apis
  // 'https://api.countapi.xyz/get/kurleys-web/profile-site' this is the url for the views
  // 'https://api.countapi.xyz/update/kurleys-web/profile-site/?amount=1' this is the url for the increase views
  useEffect(() => {
    async function increaseViews() {
      const response = await fetch(
        'https://api.countapi.xyz/update/kurleys-web/profile-site/?amount=1'
      )
      const data = await response.json()
      setVisitors(data.value)
    }
    increaseViews()

    async function fetchViews() {
      const response = await fetch(
        'https://api.countapi.xyz/get/kurleys-web/profile-site'
      )
      const data = await response.json()
      setVisitors(data.value)
    }
    fetchViews()
  }, [])

  useEffect(() => {
    setTimeout(() => {
      setShowIntro(false)
    }, 5500)
  }, [])

  useEffect(() => {
    const darkMode = localStorage.getItem('theme')
    if (darkMode === null) {
      localStorage.setItem('theme', 'false')
      setDarkMode(false)
    } else {
      setDarkMode(JSON.parse(darkMode))
    }
  }, [])

  useEffect(() => {
    data.map((project) => {
      const link = project.status.likes
      fetchLikes(link)
      async function fetchLikes(link: string) {
        const response = await fetch(link)
        const data = await response.json()
        setLikesData((prev: any) => ({
          ...prev,
          [project.id]: data.value,
        }))
      }
    })
  }, [r])

  // console.log({ likesData })

  useEffect(() => {
    const arr = Object.values(likesData)
    const sum = arr.reduce((a: any, b: any) => a + b, 0)
    setSumOfLikes(sum)
    setTimeout(() => {
      setCalculating(false)
    }, 600)
  }, [likesData])

  return (
    <div id={darkMode ? 'dark' : 'light'} className="container">
      <Head>
        <title>KuralaYusha</title>
        <meta
          name="description"
          content="Generated by Yusha Kuralay"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={showIntro ? 'main noFlow' : 'main'}>
        {showIntro && (
          <Intro darkMode={darkMode} showIntro={showIntro} r={r} />
        )}

        <NavBar
          setDarkMode={setDarkMode}
          darkMode={darkMode}
          setShowIntro={setShowIntro}
          setR={setR}
          r={r}
        />
        <MainPage
          data={data}
          visitors={visitors}
          likesData={likesData}
          sumOfLikes={sumOfLikes}
          calculating={calculating}
          userDataStarter={userDataStarter}
          darkMode={darkMode}
          setR={setR}
          r={r}
        />
      </main>
    </div>
  )
}

// export const getStaticProps = async () => {
//   const response = await fetch(
//     'https://api.countapi.xyz/get/kurleys-web/profile-site'
//   ).then((res) => res.json())

//   const res = await fetch(
//     'https://api.countapi.xyz/update/kurleys-web/profile-site/?amount=1'
//   ).then((res) => res.json())

//   return {
//     props: {
//       pageViwers: response.value,
//     },
//   }
// }
