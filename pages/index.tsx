import Head from 'next/head'
import { useEffect, useState } from 'react'

import NavBar from '../components/NavBar'
import MainPage from '../components/MainPage'

import projectsData from './api/data.json'

export type ProjectData = {
  id: number
  name: string
  image: string[]
  description: string
  link: string
  technologies: string[]
  status: {
    views: string
    increaseViews: string
    likes: string
    increaseLikes: string
    decreaseLikes: string
  }
}[]

export default function Home(props: { pageViwers: number }) {
  const [darkMode, setDarkMode] = useState<boolean>(false)
  const [data, setData] = useState(projectsData)
  const [visitors, setVisitors] = useState<number>(props.pageViwers)
  const [likesData, setLikesData] = useState<any>({})
  const [sumOfLikes, setSumOfLikes] = useState<any>()
  const [calculating, setCalculating] = useState<boolean>(true)
  const [userDataStarter, setUserDataStarter] = useState<any>({})

  useEffect(() => {
    data.map((project) => {
      const link = project.status.likes
      fetchLikes(link)
      async function fetchLikes(link: string) {
        const response = await fetch(link)
        const data = await response.json()
        setLikesData((prev: any) => ({
          ...prev,
          [project.id]: data.value,
        }))
      }
    })
    const userStarterData = localStorage.getItem('userDataStarter')
    if (userStarterData === null) {
      setingUserData()
    } else {
      setUserDataStarter(JSON.parse(userStarterData))
    }

    function setingUserData() {
      data.map((project) => {
        console.log('setting the data')
        setUserDataStarter((prev: any) => ({
          ...prev,
          [project.id]: {
            liked: false,
          },
        }))
      })
    }
  }, [])
  // console.log({ userDataStarter })

  useEffect(() => {
    const arr = Object.values(likesData)
    const sum = arr.reduce((a: any, b: any) => a + b, 0)
    setSumOfLikes(sum)
    setTimeout(() => {
      setCalculating(false)
    }, 500)
  }, [likesData])

  return (
    <div id={darkMode ? 'dark' : 'light'}>
      <Head>
        <title>KuralaYusha</title>
        <meta
          name="description"
          content="Generated by Yusha Kuralay"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <NavBar setDarkMode={setDarkMode} darkMode={darkMode} />
        <MainPage
          data={data}
          visitors={visitors}
          likesData={likesData}
          sumOfLikes={sumOfLikes}
          calculating={calculating}
          userDataStarter={userDataStarter}
        />
      </main>
    </div>
  )
}

export const getStaticProps = async () => {
  const response = await fetch(
    'https://api.countapi.xyz/get/kurleys-web/profile-site'
  ).then((res) => res.json())

  const res = await fetch(
    'https://api.countapi.xyz/update/kurleys-web/profile-site/?amount=1'
  ).then((res) => res.json())

  return {
    props: {
      pageViwers: response.value,
    },
  }
}
